Control flow:
============
app at startup
	init C=config
		.config = utils.get_config (json from file) - no game type or method set now
	init theQ
		sets the question as a multiplication question + answer
	init myperform = perf('set')
		.driver = set meaning a set of questions and not timed

app with leaderboard options - will need to reset the config
	C.set(game_mode)
		sets filename and board name, current game and mode
    myPerform.reset(C.curr_mode)
    	sets the mode again, start timer
    myPerform.get_lead_list()
    	loads the list from file, sorts , set to property and returns it
    leaders = myPerform.lead_list
		not elegant - puts it to another variable to pass to the template

At the end of the game:
	my perform.updateScore is run
		this runs check for stop, then if a stop check for high score
	todo: move isHighScore to config, pass self.correctrate from my perform as param
		
12Nov - confirm last change was on 8Nov 5:18. check iMac version and then merge the branches and update python anywhere.

============
Mods 20181015

alter classes to take .reset as full re_init
    take .newq as just a new question to generate
move game selection and mode to game_control
function to split game and mode & init class

Logic flow 20180710

game.HTML
    sends answer to /submit_answer
    /submit_answer
        get result
        get next q
        get stop flag
        return json to game.html & game_1.js
    game_1.js
        requires(stat/reaction/next_question/stop_game)
        update reaction/stat/next q
        send to /leader_board


MODIFICATION 20180712

game.HTML
    sends answer to /submit_answer
    /submit_answer
        get result
        get next q
        get stop flag
        get leader_add
        return json to game.html & game_1.js
    game_1.js
        requires(stat/reaction/next_question/stop_game/leader_add)
        update reaction/stat/next q
        send to
            /leader_board (if not leader_add)
            /add_high_score (it leader_add)
add_high_score
    add high score name
    send to /leader_board

other fixes:
use of the leaderboard name

--------------------rubbish collection---------

#the_folder = os.path.dirname(os.path.abspath(__file__))
#l_file = os.path.join(the_folder,'static/files/leaders.json')
#l_file_20 = os.path.join(the_folder,'static/files/leaders20.json')